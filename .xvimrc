
" Basic options {{{

" xvim-specific bindings
nnoremap <space>f :xcmenucmd Open Quickly...<CR>
nnoremap <space>al :xcmenucmd Open Quickly...<CR>
nnoremap <C-n> :njump<cr>
nnoremap <C-p> :pjump<cr>
nnoremap <space>c<space> :xcmenucmd Toggle Comments<CR>
vnoremap <space>c<space> :xcmenucmd Toggle Comments<CR>
nnoremap <space>w :xcmenucmd Save<cr>
"nnoremap <A-n> :xcmenucmd Go Forward in Assistant Editor<CR>
"nnoremap <A-p> :xcmenucmd Go Back in Assistant Editor<CR>


" set ai                  " auto indenting
set shell=/bin/bash     " fish shell screws up stuff like go integration
set history=100         " keep 100 lines of history
set ruler               " show the cursor position
set wildmenu            " show options when autocompleting a path
syntax on               " syntax highlighting
set hlsearch            " highlight the last searched term
set runtimepath+=~/.vim/indent

" For go
set rtp+=$GOROOT/misc/vim

" Keep the cursor at least 10 characters from the edge of the screen
set scrolloff=10

" only do case-sensitive searches when searching for uppercase characters
" (both options necessary to take affect)
set ignorecase
set smartcase

" make grep always search recursively
set grepprg=grep\ -rnIi

" For some reason Y grabs the whole line
nnoremap Y y$

" Don't move the cursor to the beginning of the line when switching between
" buffers
set nostartofline

" don't wrap lines
set nowrap

" Filetypes to ignore
set wildignore+=*/.git/*,*/env/*,*/node_modules/*,*/.hg/*,*/.svn/*,*/.idea/*,*/.DS_Store,*/.class,*/dist,*/target

" Tab-completion bash style for filenames
set wildmode=longest,list

set incsearch
set switchbuf=usetab
set hidden

set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

set nobackup
set noswapfile

let mapleader = " "
let maplocalleader = "\\"
set number
nnoremap H ^
nnoremap L $
inoremap jk <esc>
inoremap Jk <esc>
inoremap JK <esc>
" nnoremap <space>w :update<cr>
nnoremap <space>q :q!<cr>
nnoremap <space>x :x<cr>

" nnoremap <space>bs :buffers<cr>
nnoremap <space><space> :b#<cr>
" see plugin/bclose.vim
nmap <space>ad <Plug>Kwbd
noremap - ddp
noremap _ ddkP
inoremap <c-u> <esc>viwUea
" nnoremap <c-O> <c-O>zz
" nnoremap <c-I> <c-I>zz
" nnoremap <c-u> viwU
nnoremap <space>ev :e $MYVIMRC<cr>
" nnoremap <space>sv :source $MYVIMRC<cr>
nnoremap <space>" bi"<esc>lea"<esc>
nnoremap <space>' bi'<esc>lea'<esc>
vnoremap <space>" di""<esc>hp
vnoremap <space>' di''<esc>hp
nnoremap <space>noh :noh<cr>
" faster double ctrl-w
" nnoremap <space>ss <c-w><c-w>

" quick navigation between vim panes
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" map blockwise visual mode to space-v, ctrl is hard to hit
nnoremap <space>v 0<c-V>

" toggle showing column numbers
nnoremap <c-n><c-n> :set invnumber<CR>

" split windows
nnoremap <space>vs <c-w>v
nnoremap <space>hs <c-w>s

" replace word with last yanked text
"
" 'mf' sets a mark,
" A<space><esc> appends a space at the end of the line
" `f jumps back to the word
" _diwP deletes it into the black hole buffer and pastes the new word
" A<backspace><esc> removes the blank space from the end of the line
" `f jumps back to the word
" :delm<space>f<cr> removes the mark
"
" it's necessary to add a space on the end because otherwise the script
" is inconsistent depending on whether the word to be replaced is at
" the end of the line or not
nnoremap <space>R mfA<space><esc>`f"_diwPA<backspace><esc>`f:delm<space>f<cr>

" Set pwd to directory of current file and print it
nnoremap <space>cd :lcd %:p:h<cr>:pwd<cr>

" double percentage sign in command mode is expanded
" to directory of current file - http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>

" quickly jump to a file's directory
nnoremap <space>ls :e <C-R>=expand('%:h').'/'<cr><cr>

" }}}

