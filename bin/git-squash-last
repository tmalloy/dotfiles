#!/bin/bash

source base-git-functions.sh

# This script effecitively squahes the last two commits together and maintains
# the earlier of the two commit messages. It does this by checking out a
# temporary branch, backing up the original branch by two commits, then merging
# in the temporary branch and committing with the first commit's message.

MESSAGE=`git log --format=%B -1 HEAD^`

TEMP_BRANCH=`env LC_CTYPE=C tr -dc "a-zA-Z0-9" < /dev/urandom | head -c 32`

tm_git_stash

git co -b $TEMP_BRANCH
git co -

git reset --hard HEAD^^
git merge $TEMP_BRANCH --squash
git commit --all -m "$MESSAGE"

git branch -D $TEMP_BRANCH

tm_git_stash_pop
